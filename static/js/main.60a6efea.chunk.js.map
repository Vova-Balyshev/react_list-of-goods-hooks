{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","start","isReversed","makeReverse","NONE","sortType","sortByType","renderList","goods","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","Stack","direction","spacing","className","Button","variant","type","onClick","color","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,sEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAE3B,MAAyBC,oBAAS,GAAlC,mBAAKC,EAAL,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA+BJ,mBAASH,EAASQ,MAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAnDR,SACEC,EACAH,EACAH,GAEA,IAAMO,EAAY,YAAOD,GAoBzB,OAlBIH,IAAaT,EAASQ,MACxBK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKT,EAASiB,QACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXd,GACFO,EAAaQ,UAGRR,EA0BYS,CAAkBrB,EAAiBQ,EAAUH,GAEhE,OACE,cAACiB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,SACE,sBAAKC,UAAU,MAAf,WACItB,GACA,cAACuB,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLC,QAAS,WACPzB,EAAMD,GAAY,IAJtB,mBAWDA,GACC,qCACE,cAACuB,EAAA,EAAD,CACED,UAAU,SACVG,KAAK,SACLD,QAAQ,YACRE,QApCU,WACpBpB,EAAWV,EAASiB,UA+BZ,iCAQA,cAACU,EAAA,EAAD,CACED,UAAU,SACVG,KAAK,SACLD,QAAQ,YACRE,QAxCS,WACnBpB,EAAWV,EAASmB,SAmCZ,4BAQA,cAACQ,EAAA,EAAD,CACED,UAAU,SACVE,QAAQ,YACRC,KAAK,SACLC,QAxDI,WACdvB,GAAaD,IAmDL,qBAQA,cAACqB,EAAA,EAAD,CACEC,QAAQ,WACRG,MAAM,QACNF,KAAK,SACLC,QApDE,WACZpB,EAAWV,EAASQ,MACpBD,GAAY,IA8CJ,mBAQA,oBAAImB,UAAU,QAAd,SACGf,EAAWqB,KAAI,SAAAC,GAAI,OAClB,oBAAeP,UAAU,QAAzB,SACGO,GADMA,iBC/HzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.60a6efea.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line\n  let [isStarted, start] = useState(false);\n  const [isReversed, makeReverse] = useState(false);\n  const [sortType, sortByType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    makeReverse(!isReversed);\n  };\n\n  const sortByAlpabet = () => {\n    sortByType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    sortByType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    sortByType(SortType.NONE);\n    makeReverse(false);\n  };\n\n  const renderList = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <div className=\"App\">\n        {!isStarted && (\n          <Button\n            variant=\"outlined\"\n            type=\"button\"\n            onClick={() => {\n              start(isStarted = true);\n            }}\n          >\n            Start\n          </Button>\n        )}\n\n        {isStarted && (\n          <>\n            <Button\n              className=\"button\"\n              type=\"button\"\n              variant=\"contained\"\n              onClick={sortByAlpabet}\n            >\n              Sort alphabetically\n            </Button>\n            <Button\n              className=\"button\"\n              type=\"button\"\n              variant=\"contained\"\n              onClick={sortByLength}\n            >\n              Sort by length\n            </Button>\n            <Button\n              className=\"button\"\n              variant=\"contained\"\n              type=\"button\"\n              onClick={reverse}\n            >\n              Reverse\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </Button>\n            <ul className=\"Goods\">\n              {renderList.map(good => (\n                <li key={good} className=\"goods\">\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </Stack>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}